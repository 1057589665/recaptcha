#summary How to set up reCAPTCHA.

*Note: this documentation is a community-supported, unofficial version of the official docs, and may be out of date or incorrect in parts. The official docs are located at: http://code.google.com/apis/recaptcha/intro.html *

reCAPTCHA is a free CAPTCHA service that helps protect your site against spam, malicious registrations and other forms of attacks where computers try to disguise themselves as a human. reCAPTCHA comes in the form of a widget that you can easily add to your blog, forum, registration, etc. Below you can find instructions on how to add reCAPTCHA to your site.

= Part 1: Sign Up =

First, you'll need to [https://www.google.com/recaptcha/admin sign up] and create reCAPTCHA keys for your site. 

The keys are unique to your domain and sub-domains and will not work for other domains unless you:
  * Sign up for multiple keys (one for each site)
  * Create a global key by checking the box for "Enable this key on all domains (global key)"

For example:
  * The keys for *test.com* will work on *a.test.com*, *b.test.com*, *c.test.com* and any other sub-domains.
  * If the option "Enable this key on all domains (global key)" is checked, the keys will work on *a.test.com*, *x.com*, *y.com* and any other domains or sub-domains.

= Part 2: Installation =
Installation consists of two steps and optionally a third step where you customize the widget:

  # Client Side: Displaying the reCAPTCHA Widget (Required)
  # Server Side: Verifying the solution (Required)
  # Customizations (Optional)

In most Web forms, you usually have two files: the form itself with the fields and the file with the script to process the inputs to the form. These two files correspond to steps 1 and 2 above. Therefore, in most cases you will have to modify two different files. 

Displaying the reCAPTCHA widget is the simpler step. You can usually display it using an application plugin (recommended; see below), or alternatively by adding the javascript below inside your `<form>` element (a third option, discussed later, is to use the AJAX API.)

{{{
 <script type="text/javascript"
   src="https://www.google.com/recaptcha/api/challenge?k=YOUR_PUBLIC_KEY"
 </script>
 <noscript>
   <iframe src="https://www.google.com/recaptcha/api/noscript?k=YOUR_PUBLIC_KEY"
       height="300" width="500" frameborder="0"></iframe><br>
 </noscript>
}}}

You need to replace the two instances of YOUR_PUBLIC_KEY with the public key that you received during the account creation process (part 1 above). Be careful that you don't use your private key by mistake. 

Verifying the solution is a bit more difficult, and usually requires modifying a script. If you're using one of the following programming environments or applications, use these resources and instructions:

*Programming Environments:*

  * [#PHP PHP]
  * [#ASP.NET ASP.NET]
  * [#Classic_ASP Classic ASP] (contributed by Mark Short)
  * [#Java/JSP Java/JSP]
  * [#Perl Perl]
  * [http://python.org/pypi/recaptcha-client Python]
  * [http://www.loonsoft.com/recaptcha/ Ruby] (contributed by McClain Looney)
  * Another [http://github.com/ambethia/recaptcha/ Ruby] library from Jason L Perry
  * [http://code.google.com/p/mailhide-tag/ JSP Mailhide Tag] (contributed by Tamas Magyar)
  * [http://recaptcha.riaforge.org/ ColdFusion] (contributed by Robin Hilliard)
  * [http://www.danstrong.com/reCAPTCHA-WebDNA.html WebDNA] (contributed by Dan Strong)

*Applications:*

  * [http://recaptcha.net/plugins/wordpress/ WordPress]
  * [http://recaptcha.net/plugins/mediawiki/ MediaWiki]
  * [http://recaptcha.net/plugins/phpbb/ phpBB]
  * [#FormMail FormMail]
  * [http://multipart-mixed.com/software/recaptcha.html Movable Type] (contributed by Josh Carter)
  * [http://drupal.org/project/recaptcha Drupal] (contributed by Rob Loach)
  * [http://trac.symfony-project.com/trac/wiki/sfReCaptchaPlugin Symfony] (contributed by Arthur Koziel)
  * [http://typo3.org/extensions/repository/view/jm_recaptcha/current/ TYPO3] (maintained by Markus Blaschke, contributed by Jens Mittag. See also the [http://typo3.org/extensions/repository/view/jm_recaptcha_example/current/ example] of using the plugin)
  * [http://lordmatt.co.uk/item/812/ NucleusCMS] (contributed by Matt)
  * [http://www.vbulletin.org/forum/showthread.php?t=151824 vBulletin] (contributed by Magnus)
  * [http://extensions.joomla.org/component/option,com_mtree/task,viewlink/link_id,2866/Itemid,35/ Joomla] (contributed by Robert van den Breemen)
  * [http://code.google.com/p/mailhide-tag/ JSP Mailhide] (by Tamas Magyar)
  * [http://www.gospelrhys.co.uk/plugins/bbpress-plugins/recaptcha-bbpress-plugin bbPress] (by Rhys Wynne)
  * [http://www.webgui.org/wiki/enabling-recaptcha WebGUI]

*Otherwise:*

  * The DIY installation requires you to write code to communicate with reCAPTCHA servers to verify the solution.

== PHP ==

Download the [http://code.google.com/p/recaptcha/downloads/list?q=label:phplib-Latest reCAPTCHA PHP library]. You will only need one file from there (recaptchalib.php). The other files are examples, readme and legal stuff -- they don't affect functionality.

=== Client Side (How to make the CAPTCHA image show up) ===
If you want to use the PHP library to display the reCAPTCHA widget, you'll need to insert this snippet of code inside the `<form>` element where the reCAPTCHA widget will be placed:

{{{
  require_once('recaptchalib.php');
  $publickey = "YOUR_PUBLIC_KEY"; // You got this from the signup page.
  echo recaptcha_get_html($publickey);
}}}

With the code, your form might look something like this:

{{{
<!-- your HTML content -->
 <form method="post" action="verify.php">
   <?php
     require_once('recaptchalib.php');
     $publickey = "YOUR_PUBLIC_KEY"; // you got this from the signup page
     echo recaptcha_get_html($publickey);
   ?>
   <input type="submit" />
 </form><br>
<!-- more of your HTML content -->
}}}

Don't forget to set $publickey by replacing YOUR_PUBLIC_KEY with the value you obtained in Part 1 above.

Note that the value of the "action" attribute is "verify.php". Now, verify.php is the destination file in which the values of this form are submitted to. So you will need a file verify.php in the same location as the client html.

The require_once function in the example above expects recaptchalib.php to be in the same directory as your form file. If it is in another directory, you must link it appropriately. For example if your recaptchalib.php is in the directory called 'captcha' that is on the same level as your form file, the function will look like this: require_once('captcha/recaptchalib.php').

Also make sure your form is set to get the form variables using `$_POST`, instead of `$_REQUEST`, and that the form itself is using the POST method.

=== Server Side (How to test if the user entered the right answer) ===

The following code should be placed at the top of the verify.php file:

{{{
 <?php
 require_once('recaptchalib.php');
 $privatekey = "YOUR_PRIVATE_KEY";
 $resp = recaptcha_check_answer ($privatekey,
                               $_SERVER["REMOTE_ADDR"],
                               $_POST["recaptcha_challenge_field"],
                               $_POST["recaptcha_response_field"]);<br>
 if (!$resp->is_valid) {
   // What happens when the CAPTCHA was entered incorrectly
   die ("The reCAPTCHA wasn't entered correctly. Go back and try it again." .
        "(reCAPTCHA said: " . $resp->error . ")");
 } else {
   // Your code here to handle a successful verification
 }
 ?>
}}}

In the code above:
  * `recaptcha_check_answer` returns an object that represents whether the user successfully completed the challenge.
  * If `$resp->is_valid` is true then the captcha challenge was correctly completed and you should continue with form processing.
  * If `$resp->is_valid` is false then the user failed to provide the correct captcha text and you should redisplay the form to allow them another attempt. In this case `$resp->error` will be an error code that can be provided to `recaptcha_get_html`. Passing the error code makes the reCAPTCHA control display a message explaining that the user entered the text incorrectly and should try again.

Notice that this code is asking for the *private* key, which should not be confused with the public key. You get that from the same page as the public key.

That's it! reCAPTCHA should now be working on your site. 

== ASP.NET ==

  * Download the reCAPTCHA ASP.NET library.
  * Add a reference on your website to library/bin/Release/Recaptcha.dll: On the Visual Studio Website menu, choose Add Reference and then click the .NET tab in the dialog box. Select the Recaptcha.dll component from the list of .NET components and then click OK. If you don't see the component, click the Browse tab and look for the assembly file on your hard drive.
  * Insert the reCAPTCHA control into the form you wish to protect by adding the following code snippets:

  * At the top of the aspx page, insert this:

{{{
 <%@ Register TagPrefix="recaptcha" Namespace="Recaptcha" Assembly="Recaptcha" %>
}}}

  * Then insert the reCAPTCHA control inside of the `<form runat="server">` tag:

{{{
 <recaptcha:RecaptchaControl
   ID="recaptcha"
   runat="server"
   PublicKey="<font color=red>your_public_key</font>"            
   PrivateKey="<font color=red>your_private_key</font>"
   />
}}}
  * You will need to substitute your public and private key into PublicKey and PrivateKey respectively.
  * Make sure you use ASP.NET validation to validate your form (you should check Page.IsValid on submission).
  * The following is a "Hello World" with reCAPTCHA using Visual Basic. A C# sample is included with the library download:
{{{
 <%@ Page Language="VB" %>
 <%@ Register TagPrefix="recaptcha" Namespace="Recaptcha" Assembly="Recaptcha" %>
 <script runat=server>
     Sub btnSubmit_Click(ByVal sender As Object, ByVal e As EventArgs)
         If Page.IsValid Then
             lblResult.Text = "You Got It!"
             lblResult.ForeColor = Drawing.Color.Green
         Else
             lblResult.Text = "Incorrect"
             lblResult.ForeColor = Drawing.Color.Red
         End If
     End Sub
 </script>
 <html>
 <body>
     <form runat="server">
         <asp:Label Visible=false ID="lblResult" runat="server" />   
         <recaptcha:RecaptchaControl
             ID="recaptcha"
             runat="server"
             Theme="red"
             PublicKey="<font color=red>your_public_key</font>"            
             PrivateKey="<font color=red>your_private_key</font>"
             />
         <nowiki><br /></nowiki>
         <asp:Button ID="btnSubmit" runat="server" Text="Submit" OnClick="btnSubmit_Click" />
     </form>
 </body>
 </html>
}}}